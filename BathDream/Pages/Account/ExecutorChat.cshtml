@page
@model BathDream.Pages.Account.ExecutorChatModel
@{
}
@{
    ViewData["Title"] = "Чат с пользователем";
}

@section MainMenu
{
    <partial name="MainMenu" model="null" />
}

<br />
<br />
<div class="container-scroller">
    <div class="page-wrapper chiller-theme ">
        <a id="show-sidebar" class="btn btn-sm btn-dark" style="color: #333;" href="#">
            <i class="fas fa-bars"></i>
        </a>
        <nav id="sidebar" class="sidebar-wrapper">
            <div class="sidebar-content">
                <div class="sidebar-brand">
                    <a href="#">Меню</a>
                    <div id="close-sidebar">
                        <i class="fas fa-times"></i>
                    </div>
                </div>

                <div class="sidebar-header">

                    <div class="user-pic">
                        <img class="img-responsive img-rounded" src="https://raw.githubusercontent.com/azouaoui-med/pro-sidebar-template/gh-pages/src/img/user.jpg"
                             alt="User picture">
                    </div>

                    <div class="user-info">
                        <span class="user-name">
                            @*@Model.Input.NameFamaly*@
                            @*<strong>@Model.Input.NameFamaly</strong>*@
                        </span>
                        <span class="user-role">Исполнитель</span>
                        <span class="user-status">
                            <!--<i class="fa fa-circle"></i>-->
                            <span>Online</span>
                        </span>
                    </div>
                </div>
                <!-- sidebar-search  -->
                <div class="sidebar-menu">
                    <ul>
                        <li class="header-menu" id="close-sidebar">
                            <span>Доступные действия</span>
                        </li>
                        <li class="sidebar-dropdown">
                            <a asp-page="/Account/Executor" >
                                <i class="fa fa-tachometer"></i>
                                <span>Доступные заказы</span>
                            </a>
                        </li>
                        <li class="sidebar-dropdown">
                            <a asp-page="/Account/Executor" asp-route-flag="2">
                                <i class="fa fa-shopping-cart"></i>
                                <span>Принятые заказы</span>
                            </a>
                        </li>
                        @*<li class="sidebar-dropdown">
                            <a asp-page-handler="Brief">
                                <i class="far fa-gem"></i>
                                <span>Проект</span>
                            </a>
                        </li>
                        <li class="sidebar-dropdown">
                            <a href="#">
                                <i class="fa fa-chart-line"></i>
                                <span>Материал</span>
                            </a>
                        </li>
                        <li class="sidebar-dropdown">
                            <a href="#">
                                <i class="fa fa-globe"></i>
                                <span>Документы</span>
                            </a>
                        </li>*@

                    </ul>
                </div>
                <!-- sidebar-menu  -->
            </div>
        </nav>
        <main class="page-content">
            <div class="messaging">
                <div class="inbox_msg">
                    <div class="mesgs">
                        <div class="msg_history" id="chatroom"></div>
                        <div class="type_msg">
                            <div class="input_msg_write">
                                <!--<textarea id="message"  class="write_msg" placeholder="Написать сообщение"></textarea>-->
                                <input type="text" id="message" class="write_msg" placeholder="Написать сообщение" />
                                <button class="msg_send_btn" id="sendBtn" type="button"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
            </div>
        </main>
    </div>
    
</div>
        

 <script src="/js/microsoft/signalr/dist/browser/signalr.js"></script>
 <script type="text/javascript">
    var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();
    const messages = document.getElementById('chatroom');
    connection.on("Send", function (data) {

        var when = new Date(data.when);
        var options = {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: 'numeric',
            minute: 'numeric'
        };
        let elem = document.createElement("div");
        if (data.isMe == 1) {

            elem.className = "outgoing_msg";

            let elem2 = document.createElement('div');
            elem2.className = "sent_msg";

            let elem3 = document.createElement('p');
            elem3.innerHTML = data.message;

            let elemWhen = document.createElement('span');
            elemWhen.innerHTML = when.toLocaleString("ru", options);
            elemWhen.className = "time_date";

            elem2.appendChild(elem3);
            elem2.appendChild(elemWhen);

            elem.appendChild(elem2);
            elem.appendChild(elem2);

        }
        else {
            elem.className = "incoming_msg";
            let elem2 = document.createElement('div');
            elem2.className = "received_msg";
            let elem3 = document.createElement('div');
            elem3.className = "received_withd_msg";
            let elem4 = document.createElement('p');
            elem4.innerHTML = data.message;

            let elemWhen = document.createElement('span');
            elemWhen.className = "time_date";
            elemWhen.innerHTML = when.toLocaleString("ru", options);

            elem3.appendChild(elem4);
            elem3.appendChild(elemWhen);

            elem2.appendChild(elem3);
            elem.appendChild(elem2);
        }


        let cr = document.getElementById("chatroom");
        cr.insertAdjacentElement('beforeend', elem);
        messages.scrollTop = messages.scrollHeight;
    });

     connection.on("GetId", function (data) {
         connection.send("GetCustomerMessages", "@Model.UserId", "@Model.OrderId")
    });

    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        connection.invoke("SendToClient", message, "@Model.UserId", "@Model.OrderId");
    });

    document.getElementById("message").addEventListener("keyup", function (event) {
        if (!event.shiftKey && event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("sendBtn").click();
            document.getElementById("message").value = "";
        }
    });

    connection.start();
 </script>
